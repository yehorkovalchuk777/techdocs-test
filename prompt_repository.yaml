{
  "openapi": "3.1.0",
  "info": {
    "title": "Prompt Management API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/prompt/": {
      "get": {
        "tags": [
          "Public Prompts"
        ],
        "summary": "Get Prompt Templates",
        "description": "## Summary:\nGets Prompt templates based on defined criteria\n\n## Parameters:\n- `intent`(UUID): tag id categorised as intent  --optional\n- `domain`(UUID): tag id categorised as domain  --optional\n- `locale`(UUID): tag id categorised as locale  --optional\n- `model`(UUID): tag id categorised as model  --optional\n- `custom_tags`(List(UUID)): tag ids categorised as custom tags  --optional\n\n## Responses:\n- 200: OK: Prompt template ids returned, can return empty list if there are no records in DB.\n\n## Additional notes specific to this endpoint\n- If there are no records in DB, the response will be an empty list.",
        "operationId": "get_prompt_templates_api_v1_prompt__get",
        "parameters": [
          {
            "name": "intent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "title": "Intent"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "title": "Domain"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "title": "Locale"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "title": "Model"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "default": [],
                "title": "Custom Tags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Get Prompt Templates Api V1 Prompt  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/prompt/{prompt_id}": {
      "get": {
        "tags": [
          "Public Prompts"
        ],
        "summary": "Get Prompt Template",
        "description": "## Summary\nGet a single prompt template with variables by ID\n\n## Parameters\n- `prompt_id`(uuid): specifies the ID of the object being requested  --required\n- `owner`(str): The owner of the prompt template --required\n\n## Responses\n- 200 OK: Prompt template returned\n- 403 Forbidden: Access forbidden to prompt template, \"Access forbidden to prompt template with `inserted ID`\" message will be shown\n- 404 Not Found: Prompt template not found, \"Prompt template with `inserted ID` not found\" message will be shown\n\n## Additional Notes\n- The owner is extracted from the JWT token\n- The owner is used to check if the user has access to the prompt template\n- The prompt template is returned with its variables",
        "operationId": "get_prompt_template_api_v1_prompt__prompt_id__get",
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Id"
            }
          },
          {
            "name": "X-Owner",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true,
              "title": "X-Owner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplateWithVariables"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tag/category/": {
      "get": {
        "tags": [
          "Public Tags"
        ],
        "summary": "Get Tag Categories With Tags",
        "description": "## Summary\nGet all filtered tag categories together with their tags\n\n## Parameters\n- `requester` (str): specifies the name of the tag category  --optional\n- `type` (TagsType): specifies the type of the tag category  --optional\n\n## Response\n- 200: OK: List of all tag categories and their tags is returned",
        "operationId": "get_tag_categories_with_tags_api_v1_tag_category__get",
        "parameters": [
          {
            "name": "requester",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true,
              "title": "Requester"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagsType"
                }
              ],
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagCategoryWithTags"
                  },
                  "title": "Response Get Tag Categories With Tags Api V1 Tag Category  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BindingType": {
        "type": "string",
        "enum": [
          "constant",
          "query",
          "rag-content",
          "history",
          "app_variable"
        ],
        "title": "BindingType"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PromptTemplateVariable": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Description"
          },
          "required": {
            "type": "boolean",
            "title": "Required"
          },
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "binding_type": {
            "$ref": "#/components/schemas/BindingType"
          },
          "binding_value": {
            "type": "string",
            "nullable": true,
            "title": "Binding Value"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "required",
          "data_type",
          "binding_type",
          "binding_value"
        ],
        "title": "PromptTemplateVariable"
      },
      "PromptTemplateWithVariables": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "variables": {
            "items": {
              "$ref": "#/components/schemas/PromptTemplateVariable"
            },
            "type": "array",
            "title": "Variables"
          }
        },
        "type": "object",
        "required": [
          "id",
          "body",
          "variables"
        ],
        "title": "PromptTemplateWithVariables"
      },
      "Tag": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "title": "Created Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "active",
          "created_date"
        ],
        "title": "Tag"
      },
      "TagCategoryWithTags": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/TagsType"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "title": "Created Date"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "type",
          "active",
          "color",
          "icon",
          "created_date",
          "tags"
        ],
        "title": "TagCategoryWithTags"
      },
      "TagsType": {
        "type": "string",
        "enum": [
          "system",
          "custom"
        ],
        "title": "TagsType"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}